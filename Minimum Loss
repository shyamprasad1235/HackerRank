import java.io.*;
import java.util.*;

public class Solution { 

    public static int minimumLoss(long[] price) {
        // Create a list of pairs where each pair holds the price and its original index (year)
        List<Pair> prices = new ArrayList<>();
        
        // Fill the list with prices and their corresponding years
        for (int i = 0; i < price.length; i++) {
            prices.add(new Pair(price[i], i));
        }
        
        // Sort the prices based on the house prices
        Collections.sort(prices, (a, b) -> Long.compare(a.price, b.price));
        
        // Initialize the minimum loss to a large value
        long minLoss = Long.MAX_VALUE;
        
        // Traverse the sorted list to find the minimum loss
        for (int i = 1; i < prices.size(); i++) {
            Pair current = prices.get(i);
            Pair previous = prices.get(i - 1);
            
            // We can only sell a house bought earlier (i.e., index of the previous must be greater)
            if (previous.year > current.year) {
                long loss = current.price - previous.price;
                if (loss < minLoss) {
                    minLoss = loss;
                }
            }
        }
        
        return (int) minLoss;
    }

    // Helper class to store both the price and the year
    static class Pair {
        long price;
        int year;
        
        Pair(long price, int year) {
            this.price = price;
            this.year = year;
        }
    }

    public static void main(String[] args) throws IOException {
        // BufferedReader to read input
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        
        // Number of houses
        int n = Integer.parseInt(bufferedReader.readLine().trim());
        
        // Read the prices
        long[] price = new long[n];
        String[] priceItems = bufferedReader.readLine().split(" ");
        for (int i = 0; i < n; i++) {
            price[i] = Long.parseLong(priceItems[i]);
        }
        
        // Get the result of minimum loss calculation
        int result = minimumLoss(price);
        
        // Output the result
        System.out.println(result);
        
        // Close the reader
        bufferedReader.close();
    }
}
