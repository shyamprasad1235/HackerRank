import java.io.*;
import java.util.*;
import java.util.stream.IntStream;

class Result {
    public static String biggerIsGreater(String w) {
        char[] chars = w.toCharArray();
        int n = chars.length;

        int i = n - 2;
        while (i >= 0 && chars[i] >= chars[i + 1]) {
            i--;
        }
        if (i < 0) return "no answer";

        int j = n - 1;
        while (chars[j] <= chars[i]) {
            j--;
        }
        char temp = chars[i];
        chars[i] = chars[j];
        chars[j] = temp;

        int start = i + 1, end = n - 1;
        while (start < end) {
            temp = chars[start];
            chars[start] = chars[end];
            chars[end] = temp;
            start++;
            end--;
        }

        return new String(chars);
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(System.out));

        int T = Integer.parseInt(bufferedReader.readLine().trim());
        IntStream.range(0, T).forEach(TItr -> {
            try {
                String w = bufferedReader.readLine();
                String result = Result.biggerIsGreater(w);
                bufferedWriter.write(result);
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.flush();
        bufferedWriter.close();
    }
}
