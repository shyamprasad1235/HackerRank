import java.io.*;
import java.util.stream.IntStream;

class Result {

    /*
     * Complete the 'decentNumber' function below.
     *
     * The function accepts INTEGER n as parameter.
     */

    public static void decentNumber(int n) {
        int fives = n;

        // Find the largest number of 5s divisible by 3
        while (fives % 3 != 0 && fives >= 0) {
            fives -= 5;
        }

        // If no solution exists, print -1
        if (fives < 0) {
            System.out.println("-1");
        } else {
            // Calculate the number of 3s
            int threes = n - fives;

            // Build and print the number
            StringBuilder result = new StringBuilder();
            for (int i = 0; i < fives; i++) {
                result.append("5");
            }
            for (int i = 0; i < threes; i++) {
                result.append("3");
            }
            System.out.println(result.toString());
        }
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, t).forEach(tItr -> {
            try {
                int n = Integer.parseInt(bufferedReader.readLine().trim());

                Result.decentNumber(n);
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
    }
}
