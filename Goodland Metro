def gridlandMetro(n, m, k, track):
    if k == 0:
        return n * m

    rows = {}

    for r, c1, c2 in track:
        if r not in rows:
            rows[r] = []
        rows[r].append((c1, c2))

    occupied = 0

    for r in rows:
 
        intervals = sorted(rows[r], key=lambda x: x[0])

        merged_start, merged_end = intervals[0]

        for start, end in intervals[1:]:
            if start <= merged_end + 1:
                merged_end = max(merged_end, end)
            else:
                occupied += (merged_end - merged_start + 1)
                merged_start, merged_end = start, end

        occupied += (merged_end - merged_start + 1)

    total_cells = n * m
    lampposts = total_cells - occupied
    return lampposts
